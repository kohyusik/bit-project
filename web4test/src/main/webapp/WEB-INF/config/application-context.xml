<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jee="http://www.springframework.org/schema/jee"
  xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee.xsd
        http://mybatis.org/schema/mybatis-spring
        http://mybatis.org/schema/mybatis-spring.xsd">
  
	<!-- DataSource, DAO, SqlSessionFactory, Transaction 객체를 준비하기 위해
	     .빈을 찾는 장소를 지정한다.
	     .단, 페이지 컨트롤러는 제외한다. -->
	<context:component-scan base-package="net.bitacademy.java67">
	   <context:exclude-filter type="regex" expression="net.bitacademy.java67.web.*"/>
	</context:component-scan>
	

	<!-- DB 커넥션풀(DataSource)의 객체를 지정한다. -->
	<jee:jndi-lookup id="dataSource" jndi-name="jdbc/java67db"/>
	<!-- 
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/java67db" />
	</bean>
	 -->

	<!-- 트랜잭션 관리자 객체를 지정한다. -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- SqlSessionFactory 객체를 지정한다. -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		
		<!-- 지정한 패키지에 있는 클래스에 대해 단축 이름(클래스명)을 자동으로 지정한다. -->
		<property name="typeAliasesPackage" 
		          value="net.bitacademy.java67.domain" />
		          
		<!-- mybatis에서 사용하는 SQL 파일의 위치 정보를 지정한다. -->
    <property name="mapperLocations" 
              value="classpath*:net/bitacademy/java67/dao/*Dao.xml" />
	</bean>

  <!-- DAO 인터페이스를 분석하여 DAO 구현체를 자동으로 만들고,
       SQL 파일에 연결해주는 관리자 등록하기 -->
  <!-- 등록방법1. 직접 관리 객체 등록하기 -->
  <!-- 
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="net.bitacademy.java67.dao" />       
  </bean>                                                                 -->
                                       <!-- value=> 인터페이스가 선언된 폴더 -->
                                       
                                       
  <!-- 등록방법2.  -->
  <mybatis:scan base-package="net.bitacademy.java67.dao" />




</beans>



